


//bach3d
__device__ __host__
void init_user_MODID (real *w, struct params *p,int *ii) {
                    
	real p1,p2,rho0,rho2,rhos,v1,v2,v3,T1,T2, xc,yc,zc,r0;
	real Ly, e0,c0;
        real x,y,z;
        real rgamm1, e1;
	real exp_x, exp_y, exp_z, fac;
	real delta_x, delta_y, delta_z;


	Ly=9.46e15; //secomds in light year

	e0=1.e45; // initial energy of hypernova blast 1.0e48

	c0=8.95e10;  

	p1=1.e0;
	rho0=4.0e-24;  //spatial density
	rho2=2.0e-21  ; //dust cloud density
	v1=0.e0;
	v2=0.e0;


	xc=(p->dx[0])/2;
	yc=(p->dx[1])/2;

	delta_x=2*xc; //cloud is 0.04 elements across 0.5 LY
	delta_y=2*yc;


#ifdef USE_SAC_3D


//	c0=8.95e13;


//	rho0=2.e-22;


	v3=0.e0;


	zc=(p->dx[2])/2;
	delta_z=2*zc;

#endif
	
	
	
	
	

	  int i,j,k;
	  i=ii[0];
	  j=ii[1];


          x=i*(p->dx[0])+(p->xmin[0]);
          y=j*(p->dx[1])+(p->xmin[1]);

//useful gaussian form to test dustcloud distribution
	exp_x=exp(-((x-xc)*(x-xc))/(delta_x*delta_x));
	exp_y=exp(-((y-yc)*(y-yc))/(delta_y*delta_y));

//	fac=exp_x*exp_y;


	#ifdef USE_SAC_3D
	 	  k=ii[2];

          z=k*(p->dx[2])+(p->xmin[2]);
	exp_z=exp(-((z-zc)*(z-zc))/(delta_z*delta_z));
	
	fac=exp_x*exp_y*exp_z;
		    w[fencode3_i(p,ii,rho)]=0.0;
                    w[fencode3_i(p,ii,rhob)]=0.0;
                    w[fencode3_i(p,ii,energyb)]=0.0;
                    w[fencode3_i(p,ii,energy)]=0.0;
		    //rhos=rho0+c0/((x-xc)*(x-xc)+(y-yc)*(y-yc)+(z-zc)*(z-zc));
		    rhos=rho0+rho2*fac;
		    w[fencode3_i(p,ii,rho)]=rhos;


                    rgamm1=1.0/((p->gamma)-1);
                    w[fencode3_i(p,ii,energy)]=rgamm1*pow(rhos,(p->gamma));
		    
		    w[fencode3_i(p,ii,b1)]=0;
		    w[fencode3_i(p,ii,b2)]=0;
		    w[fencode3_i(p,ii,b3)]=0;


		    w[fencode3_i(p,ii,mom3)]=v3;
		    w[fencode3_i(p,ii,mom2)]=v2;
		    w[fencode3_i(p,ii,mom1)]=v1;

                   e1=(0.5*rgamm1*(1-((p->gamma)-1))*(w[fencode3_i(p,ii,b1)]*w[fencode3_i(p,ii,b1)]+w[fencode3_i(p,ii,b2)]*w[fencode3_i(p,ii,b2)]+w[fencode3_i(p,ii,b3)]*w[fencode3_i(p,ii,b3)]));
                    w[fencode3_i(p,ii,energy)]=w[fencode3_i(p,ii,energy)]-e1;
                  


                    //w[fencode3_i(p,ii,energy)]=w[fencode3_i(p,ii,energyb)];
                    //w[fencode3_i(p,ii,energyb)]=0.0;

                     if(i==63 && j==71  && k==63)
                        w[fencode3_i(p,ii,energy)]=w[fencode3_i(p,ii,energy)]+e0/pow(p->dx[0],3.0);
  
			// w(40,28,e_)=e0/(x(1,3,2)-x(1,2,2))**3.d0
			//  w(80,92,e_)=e0/(x(1,3,2)-x(1,2,2))**3.d0  

		    //w[fencode3_i(p,ii,b1b)]=w[fencode3_i(p,ii,b1)];
		    //w[fencode3_i(p,ii,b2b)]=w[fencode3_i(p,ii,b2)];
		    //w[fencode3_i(p,ii,b3b)]=w[fencode3_i(p,ii,b3)];

		    w[fencode3_i(p,ii,b1b)]=0;
		    w[fencode3_i(p,ii,b2b)]=0;
		    w[fencode3_i(p,ii,b3b)]=0;




       #endif
       
 
  
  

#ifdef USE_SAC
                    w[fencode3_i(p,ii,rhob)]=0.0;
                    w[fencode3_i(p,ii,energy)]=0.0;
		    w[fencode3_i(p,ii,rhob)]=rho0+(c0/((x-xc)*(x-xc)+(y-yc)*(y-yc)));
                    //w[fencode3_i(p,ii,rhob)]=rho0;
                   // if(i==127 && j==127)
                   //    w[fencode3_i(p,ii,rhob)]=1.0e-23;

                    rgamm1=1.0/((p->gamma)-1);
                    w[fencode3_i(p,ii,energyb)]=rgamm1*pow(rho0,(p->gamma));
		    
		    w[fencode3_i(p,ii,b1)]=0;
		    w[fencode3_i(p,ii,b2)]=0;


		    w[fencode3_i(p,ii,mom2)]=v2;
		    w[fencode3_i(p,ii,mom1)]=v1;

                   e1=(0.5*rgamm1*(1-((p->gamma)-1))*(w[fencode3_i(p,ii,b1)]*w[fencode3_i(p,ii,b1)]+w[fencode3_i(p,ii,b2)]*w[fencode3_i(p,ii,b2)]));
                    w[fencode3_i(p,ii,energyb)]=w[fencode3_i(p,ii,energyb)]-e1;


                    //w[fencode3_i(p,ii,energy)]=w[fencode3_i(p,ii,energyb)];
                    //w[fencode3_i(p,ii,energyb)]=0.0;

                    w[fencode3_i(p,ii,rho)]=0;
                    //w[fencode3_i(p,ii,rhob)]=0.0;
                    //w[fencode3_i(p,ii,rho)]=w[fencode3_i(p,ii,rhob)];
                     if(i==127 && j==42)
                        w[fencode3_i(p,ii,energy)]=e0/pow(p->dx[0],3.0);
  
			// w(40,28,e_)=e0/(x(1,3,2)-x(1,2,2))**3.d0
			//  w(80,92,e_)=e0/(x(1,3,2)-x(1,2,2))**3.d0  

		    w[fencode3_i(p,ii,b1b)]=w[fencode3_i(p,ii,b1)];
		    w[fencode3_i(p,ii,b2b)]=w[fencode3_i(p,ii,b2)];

		    //w[fencode3_i(p,ii,b1)]=0;
		    //w[fencode3_i(p,ii,b2)]=0;

#endif


 






}



