
__device__ __host__
real usersource2a_MODID(real *dw, real *wd, real *w, struct params *p,int *ii, int dir) {

   real flux=0.0;

  return flux;
}





__device__ __host__
real usersource1a_MODID(real *dw, real *wd, real *w, struct params *p,int *ii,int field, int dir) {

  real vel=0;
  real x,y;

  x=(ii[1]*(p->dx[1]))-((p->n[1])*(p->dx[1])/2);
  //y=(ii[2]*(p->dx[2]))-((p->n[2])*(p->dx[2])/2);
  switch(field)
  {
    case mom1:
      vel=1/(x*x);
    break;
    /*case mom2:
      vel=(x*x-y*y)/((x*x+y*y) * (x*x+y*y));
    break;
    case mom3:
      vel=2*x*y/((x*x+y*y) * (x*x+y*y));
    break;*/
   }
 
  return vel;
 
}

__device__ __host__
real usersource1b_MODID(real *dw, real *wd, real *w, struct params *p,int *ii,int field, int dir) {

  real vel=0;
  switch(field)
  {
    case mom2:
     vel=1.0;
    break;

   }
 
  return vel;
 
}

__device__ __host__
int addsourceterms2_MODID(real *dw, real *wd, real *w, struct params *p, struct state *s,int *ii,int field,int dir) {

  int direction;
  int status=0;
  

 #if defined USE_SAC  ||  defined USE_SAC_3D

  


 #endif

  return ( status);
}

__device__ __host__
int addsourceterms1_MODID(real *dw, real *wd, real *w, struct params *p, struct state *s,int *ii,int field,int dir) {

  int direction;
  int status=0;

   real p0=10; //seconds
   real time=p0;
   real omega=2*PI/p0;
   real x,y,z;
   int i,j,k;
   real a1;

        real rhorat=2.0; //rhotube/rhoexternal
        real rtube=0.2e6; //Mm tube radius (same as Gaussian width for field computation)
        real rrat=0.5; //ration of wall thickness to radius
	  
	  i=ii[0];
	  j=ii[1];
	//  k=ii[2];
       //rhoe=8.5716527e-09;  //background density from McWhirter at 1.3Mm
       //
       //real cae=(0.08/3)/2.919e-3;
       real   uzero=9.137;//cae*0.003;

          y=(j*(p->dx[1]));
          x=(i*(p->dx[0]))-((p->n[0])*(p->dx[0])/2);
         // z=(k*(p->dx[2]))-((p->n[2])*(p->dx[2])/2);

         // a1=sqrt(z*z+y*y);
         a1=x;
 
 if( ((s->t)<10) && (ii[1]==2)  && (field=mom1)  )
 {
         dw[fencode3_MODID(p,ii,field)]=uzero*(rtube*rrat+rtube)*(rtube*rrat+rtube)*omega*omega*( -1.25*sin(omega*(s->t))*sin(omega*(s->t)/2) +  cos(omega*(s->t))*cos(omega*(s->t)/2)  );
         if(a1<(rtube*rrat+rtube)) //inside tube
         {
                           dw[fencode3_MODID(p,ii,field)]=dw[fencode3_MODID(p,ii,field)]*usersource1a_MODID(dw, wd, w, p,ii,field,dir)*(w[fencode3_MODID(p,ii,rho)]+w[fencode3_MODID(p,ii,rhob)]);
         }
         else
         {
                           dw[fencode3_MODID(p,ii,field)]=dw[fencode3_MODID(p,ii,field)]*usersource1b_MODID(dw, wd, w, p,ii,field,dir)*(w[fencode3_MODID(p,ii,rho)]+w[fencode3_MODID(p,ii,rhob)]);
         }
 }
   


  return ( status);
}

